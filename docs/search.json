[{"path":[]},{"path":"https://jrosell.github.io/ambhtmx/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"CC0 1.0 Universal","title":"CC0 1.0 Universal","text":"CREATIVE COMMONS CORPORATION LAW FIRM PROVIDE LEGAL SERVICES. DISTRIBUTION DOCUMENT CREATE ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES INFORMATION “-” BASIS. CREATIVE COMMONS MAKES WARRANTIES REGARDING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER, DISCLAIMS LIABILITY DAMAGES RESULTING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER.","code":""},{"path":"https://jrosell.github.io/ambhtmx/LICENSE.html","id":"statement-of-purpose","dir":"","previous_headings":"","what":"Statement of Purpose","title":"CC0 1.0 Universal","text":"laws jurisdictions throughout world automatically confer exclusive Copyright Related Rights (defined ) upon creator subsequent owner(s) (, “owner”) original work authorship /database (, “Work”). Certain owners wish permanently relinquish rights Work purpose contributing commons creative, cultural scientific works (“Commons”) public can reliably without fear later claims infringement build upon, modify, incorporate works, reuse redistribute freely possible form whatsoever purposes, including without limitation commercial purposes. owners may contribute Commons promote ideal free culture production creative, cultural scientific works, gain reputation greater distribution Work part use efforts others. /purposes motivations, without expectation additional consideration compensation, person associating CC0 Work (“Affirmer”), extent owner Copyright Related Rights Work, voluntarily elects apply CC0 Work publicly distribute Work terms, knowledge Copyright Related Rights Work meaning intended legal effect CC0 rights. Copyright Related Rights. Work made available CC0 may protected copyright related neighboring rights (“Copyright Related Rights”). Copyright Related Rights include, limited , following: right reproduce, adapt, distribute, perform, display, communicate, translate Work; moral rights retained original author(s) /performer(s); publicity privacy rights pertaining person’s image likeness depicted Work; rights protecting unfair competition regards Work, subject limitations paragraph 4(), ; rights protecting extraction, dissemination, use reuse data Work; database rights (arising Directive 96/9/EC European Parliament Council 11 March 1996 legal protection databases, national implementation thereof, including amended successor version directive); similar, equivalent corresponding rights throughout world based applicable law treaty, national implementations thereof. Waiver. greatest extent permitted , contravention , applicable law, Affirmer hereby overtly, fully, permanently, irrevocably unconditionally waives, abandons, surrenders Affirmer’s Copyright Related Rights associated claims causes action, whether now known unknown (including existing well future claims causes action), Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“Waiver”). Affirmer makes Waiver benefit member public large detriment Affirmer’s heirs successors, fully intending Waiver shall subject revocation, rescission, cancellation, termination, legal equitable action disrupt quiet enjoyment Work public contemplated Affirmer’s express Statement Purpose. Public License Fallback. part Waiver reason judged legally invalid ineffective applicable law, Waiver shall preserved maximum extent permitted taking account Affirmer’s express Statement Purpose. addition, extent Waiver judged Affirmer hereby grants affected person royalty-free, non transferable, non sublicensable, non exclusive, irrevocable unconditional license exercise Affirmer’s Copyright Related Rights Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“License”). License shall deemed effective date CC0 applied Affirmer Work. part License reason judged legally invalid ineffective applicable law, partial invalidity ineffectiveness shall invalidate remainder License, case Affirmer hereby affirms () exercise remaining Copyright Related Rights Work (ii) assert associated claims causes action respect Work, either case contrary Affirmer’s express Statement Purpose. Limitations Disclaimers. trademark patent rights held Affirmer waived, abandoned, surrendered, licensed otherwise affected document. Affirmer offers Work -makes representations warranties kind concerning Work, express, implied, statutory otherwise, including without limitation warranties title, merchantability, fitness particular purpose, non infringement, absence latent defects, accuracy, present absence errors, whether discoverable, greatest extent permissible applicable law. Affirmer disclaims responsibility clearing rights persons may apply Work use thereof, including without limitation person’s Copyright Related Rights Work. , Affirmer disclaims responsibility obtaining necessary consents, permissions rights required use Work. Affirmer understands acknowledges Creative Commons party document duty obligation respect CC0 use Work.","code":""},{"path":"https://jrosell.github.io/ambhtmx/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jordi Rosell. Author, maintainer.","code":""},{"path":"https://jrosell.github.io/ambhtmx/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rosell J (2024). ambhtmx: ambhtmx. R package version 0.0.0.9002, https://github.com/jrosell/ambhtmx, https://jrosell.github.io/ambhtmx.","code":"@Manual{,   title = {ambhtmx: ambhtmx},   author = {Jordi Rosell},   year = {2024},   note = {R package version 0.0.0.9002, https://github.com/jrosell/ambhtmx},   url = {https://jrosell.github.io/ambhtmx}, }"},{"path":"https://jrosell.github.io/ambhtmx/index.html","id":"ambhtmx","dir":"","previous_headings":"","what":"ambhtmx","title":"ambhtmx","text":"Build Full-stack R App ambiorix htmx.","code":""},{"path":"https://jrosell.github.io/ambhtmx/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"ambhtmx","text":"can install requeriments run examples: Furthermore, may want create .Renviron file following variables:","code":"if(!\"rlang\" %in% installed.packages()){   if(!interactive()) { stop(\"The package \\\"rlang\\\" is required.\") }   cat(\"The package \\\"rlang\\\" is required.\\n✖ Would you like to install it?\\n\\n1: Yes\\n2: No\\n\\nSelection:\")   if (readLines(n = 1) == \"1\"){       install.packages(\"rlang\")   } } rlang::check_installed(\"remotes\") remotes::install_github(\"jrosell/ambhtmx\", force = 1) rlang::check_installed(\"ambiorix\", action = \\(pkg, ... ) remotes::install_github(\"devOpifex/ambiorix\")) rlang::check_installed(\"scilis\", action = \\(pkg, ... ) remotes::install_github(\"devOpifex/scilis\")) rlang::check_installed(\"signaculum\", action = \\(pkg, ... ) remotes::install_github(\"devOpifex/signaculum\")) rlang::check_installed(\"tidyverse\") rlang::check_installed(\"zeallot\") rlang::check_installed(\"glue\") rlang::check_installed(\"htmltools\") rlang::check_installed(\"this.path\") AMBHTMX_USER=<your user> AMBHTMX_PASSWORD=<your password> AMBHTMX_SECRET=<a secret key to make cookies safer> GITHUB_PAT=<an optional token to install github repos safely> AMBHTMX_PROTOCOL=<to change host default http> AMBHTMX_HOST=<to change host default 127.0.0.1> AMBHTMX_PORT=<to change port default 3000>"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://jrosell.github.io/ambhtmx/index.html","id":"customizable-web-components-port-to-r-of-card3d-from-fasthtml","dir":"","previous_headings":"Code examples","what":"Customizable web components: Port to R of card3d from FastHTML","title":"ambhtmx","text":"Python implementation (Screenshot). Original python code credit AnswerDotAI/fasthtml, Design credit: https://codepen.io/markmiro/pen/wbqMPa","code":""},{"path":"https://jrosell.github.io/ambhtmx/index.html","id":"deployment-examples","dir":"","previous_headings":"","what":"Deployment examples","title":"ambhtmx","text":"create Dockerfile can deploy ambhtmx app HuggingFace Spaces, Digital Ocean, Google Cloud, etc. deployed examples: ambhtmx.crud (HuggingFace Spaces) ambhtmx.card3d (HuggingFace Spaces) want deploy , creating user space HuggingFace Spaces repo, select blank Dockerfile:","code":""},{"path":"https://jrosell.github.io/ambhtmx/index.html","id":"troubleshooting","dir":"","previous_headings":"","what":"Troubleshooting","title":"ambhtmx","text":"Known issues: trying autenticate 0.0.0.0 host? Cookies don’t work 0.0.0.0 host, try 127.0.0.1 domain name instead (/etc/hosts DNS). trying app without including required packages Dockerfile? Please, check logs edit Dockerfile try . Github API reach limit. need configure environment variable GITHUB_PAT. Another issue? Please, let know.","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/ambhtmx.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating an ambiorix + htmx app — ambhtmx","title":"Creating an ambiorix + htmx app — ambhtmx","text":"Creating ambiorix + htmx app","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/ambhtmx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creating an ambiorix + htmx app — ambhtmx","text":"","code":"ambhtmx(   dbname = NULL,   value = tibble::tibble(),   protocol = NULL,   host = NULL,   port = NULL,   live = \"\",   favicon = NULL,   render_index = NULL,   render_row = NULL )"},{"path":"https://jrosell.github.io/ambhtmx/reference/ambhtmx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating an ambiorix + htmx app — ambhtmx","text":"dbname file path store SQLite database (optional). value 1 row tibble names types columns (optional) protocol (default AMBHTMX_PROTOCOL http) host (default AMBHTMX_HOST 127.0.0.1) port (default AMBHTMX_PORT 3000) live script file path (optional) favicon (optional) render_index function stored model method (optional) render_row function stored model method (optional)","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/ambhtmx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creating an ambiorix + htmx app — ambhtmx","text":"list ambiorix app, running context model methods.","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/ambhtmx_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating an ambiorix + htmx app — ambhtmx_app","title":"Creating an ambiorix + htmx app — ambhtmx_app","text":"Creating ambiorix + htmx app","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/ambhtmx_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creating an ambiorix + htmx app — ambhtmx_app","text":"","code":"ambhtmx_app(   dbname = NULL,   value = tibble::tibble(),   protocol = NULL,   host = NULL,   port = NULL,   live = \"\",   favicon = NULL,   render_index = NULL,   render_row = NULL )"},{"path":"https://jrosell.github.io/ambhtmx/reference/ambhtmx_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating an ambiorix + htmx app — ambhtmx_app","text":"dbname file path store SQLite database (optional). value 1 row tibble names types columns (optional) protocol (default AMBHTMX_PROTOCOL http) host (default AMBHTMX_HOST 127.0.0.1) port (default AMBHTMX_PORT 3000) live script file path (optional) favicon (optional) render_index function stored model method (optional) render_row function stored model method (optional)","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/ambhtmx_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creating an ambiorix + htmx app — ambhtmx_app","text":"list ambiorix app, running context model methods.","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/builder.html","id":null,"dir":"Reference","previous_headings":"","what":"Create HTML tags without requiring htmltools::tags$ — builder","title":"Create HTML tags without requiring htmltools::tags$ — builder","text":"Create R object represents HTML tag. convenience, common HTML tags (e.g., <div>) can created calling tag name directly (e.g., div()). create less common HTML5 (SVG) tags (e.g., <article>), use tags list collection (e.g., tags$article()). create non HTML/SVG tags, use lower-level tag() constructor.","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/builder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create HTML tags without requiring htmltools::tags$ — builder","text":"","code":"button(..., .noWS = NULL, .renderHook = NULL)  textarea(..., .noWS = NULL, .renderHook = NULL)  input(..., .noWS = NULL, .renderHook = NULL)  label(..., .noWS = NULL, .renderHook = NULL)  nav(..., .noWS = NULL, .renderHook = NULL)  li(..., .noWS = NULL, .renderHook = NULL)  ul(..., .noWS = NULL, .renderHook = NULL)  ol(..., .noWS = NULL, .renderHook = NULL)  form(..., .noWS = NULL, .renderHook = NULL)  style(..., .noWS = NULL, .renderHook = NULL)  script(..., .noWS = NULL, .renderHook = NULL)"},{"path":"https://jrosell.github.io/ambhtmx/reference/builder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create HTML tags without requiring htmltools::tags$ — builder","text":"... Tag attributes (named arguments) children (unnamed arguments). named argument NA value rendered boolean attributes (see example). Children may include combination : tags objects HTML() strings htmlDependency()s Single-element atomic vectors list()s containing combination .noWS Character vector used omit whitespace normally written around tag. Valid options include , , outside, -begin, -end. number options can specified. .renderHook function (list functions) call tag rendered. function least one argument (tag) return anything can converted tags via .tags(). Additional hooks may also added particular tag via tagAddRenderHook().","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/builder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create HTML tags without requiring htmltools::tags$ — builder","text":"list() shiny.tag class can converted HTML string via .character() saved file save_html().","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/component.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate component — amb_card","title":"Generate component — amb_card","text":"Generate component","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/component.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate component — amb_card","text":"","code":"amb_card(   ...,   class = NULL,   title = NULL,   title_icon = NULL,   title_class = NULL )  amb_input_text(   ...,   id,   label = NULL,   value = \"\",   input_class = NULL,   hx_post = NULL )  amb_button(..., class = \"rounded-1\", type = \"button\")"},{"path":"https://jrosell.github.io/ambhtmx/reference/component.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate component — amb_card","text":"... htmlobjects add class customize title customeize title text title_icon customize title icon title_class add classes title id label input label customize value customize input_class customize hx_post customize type customize","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/components.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate component — amb_card","title":"Generate component — amb_card","text":"Generate component","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/components.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate component — amb_card","text":"","code":"amb_card(   ...,   class = NULL,   title = NULL,   title_icon = NULL,   title_class = NULL )  amb_input_text(   ...,   id,   label = NULL,   value = \"\",   input_class = NULL,   hx_post = NULL )  amb_button(..., class = \"rounded-1\", type = \"button\")  amb_htmlwidget(widget, ..., width = \"100%\", height = \"400px\")"},{"path":"https://jrosell.github.io/ambhtmx/reference/components.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate component — amb_card","text":"... attributes add container class customize title customeize title text title_icon customize title icon title_class add classes title id label input label customize value customize input_class customize hx_post customize type customize widget htmlwidget convert shiny.tag width customeize width container height customeize width container","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/process_error_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Process error get requests — process_error_get","title":"Process error get requests — process_error_get","text":"Process error get requests","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/process_error_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process error get requests — process_error_get","text":"","code":"process_error_get(req, res, cookie_errors = \"errors\")"},{"path":"https://jrosell.github.io/ambhtmx/reference/process_error_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process error get requests — process_error_get","text":"req request object res response object cookie_errors need customize name errors cookie","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/process_error_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process error get requests — process_error_get","text":"error character vector","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/process_loggedin_middleware.html","id":null,"dir":"Reference","previous_headings":"","what":"Process loggedin middleware — process_loggedin_middleware","title":"Process loggedin middleware — process_loggedin_middleware","text":"Process loggedin middleware","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/process_loggedin_middleware.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process loggedin middleware — process_loggedin_middleware","text":"","code":"process_loggedin_middleware(   req,   res,   user = Sys.getenv(\"AMBHTMX_USER\"),   cookie_loggedin = \"loggedin\" )"},{"path":"https://jrosell.github.io/ambhtmx/reference/process_loggedin_middleware.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process loggedin middleware — process_loggedin_middleware","text":"req request object res response object user want customize required user uses AMBHTMX_USER cookie_loggedin need customize name loggedin cookie","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/process_loggedin_middleware.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process loggedin middleware — process_loggedin_middleware","text":"updated request req$loggedin status","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/process_login_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Render and send login page response — process_login_get","title":"Render and send login page response — process_login_get","text":"Render send login page response","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/process_login_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render and send login page response — process_login_get","text":"","code":"process_login_get(   req,   res,   page_title = \"Login\",   main = NULL,   id = \"login_form\",   login_url = \"/login\",   style = \"margin: 20px\",   cookie_errors = \"errors\" )"},{"path":"https://jrosell.github.io/ambhtmx/reference/process_login_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render and send login page response — process_login_get","text":"req request object res response object page_title need customize title page main need customize body login page id need customize id login form login_url need customize url login form style need customize styles login form cookie_errors need customize name errors cookie","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/process_login_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render and send login page response — process_login_get","text":"login page response","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/process_login_post.html","id":null,"dir":"Reference","previous_headings":"","what":"Process login requests — process_login_post","title":"Process login requests — process_login_post","text":"Process login requests","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/process_login_post.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process login requests — process_login_post","text":"","code":"process_login_post(   req,   res,   user_param = \"user\",   password_param = \"password\",   user = Sys.getenv(\"AMBHTMX_USER\"),   password = Sys.getenv(\"AMBHTMX_PASSWORD\"),   user_error = \"Invalid user\",   password_error = \"Invalid password\",   cookie_loggedin = \"loggedin\",   cookie_errors = \"errors\",   login_url = \"/login\",   success_url = \"/\" )"},{"path":"https://jrosell.github.io/ambhtmx/reference/process_login_post.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process login requests — process_login_post","text":"req request object res response object user_param need customize name user parameter password_param need customize name password parameter user want customize required user uses AMBHTMX_USER password want customize required password  uses AMBHTMX_PASSWORD user_error need customize error message user password_error need customize error message password cookie_loggedin need customize name loggedin cookie cookie_errors need customize name errors cookie login_url need customize url login form success_url need customize url success loggedin process","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/process_login_post.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process login requests — process_login_post","text":"login process response","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/process_logout_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Process logout requests — process_logout_get","title":"Process logout requests — process_logout_get","text":"Process logout requests","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/process_logout_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process logout requests — process_logout_get","text":"","code":"process_logout_get(req, res, cookie_loggedin = \"loggedin\", success_url = \"/\")"},{"path":"https://jrosell.github.io/ambhtmx/reference/process_logout_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process logout requests — process_logout_get","text":"req request object res response object cookie_loggedin need customize name loggedin cookie success_url need customize url success loggedin process","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/process_logout_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process logout requests — process_logout_get","text":"logout process response","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/render_page.html","id":null,"dir":"Reference","previous_headings":"","what":"Render a custom page with a custom title and main content — render_page","title":"Render a custom page with a custom title and main content — render_page","text":"Render custom page custom title main content","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/render_page.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render a custom page with a custom title and main content — render_page","text":"","code":"render_page(main = NULL, page_title = NULL, head_tags = NULL)"},{"path":"https://jrosell.github.io/ambhtmx/reference/render_page.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render a custom page with a custom title and main content — render_page","text":"main htmltools object body html page page_title title tag contents page head_tags optional htmltools object head html page","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/render_page.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render a custom page with a custom title and main content — render_page","text":"rendered html full html page dependencies","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/render_page.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Render a custom page with a custom title and main content — render_page","text":"can throw exceptions, handling exceptions recommended, must.","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/render_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Render imatge or ggplot to image tag — render_plot","title":"Render imatge or ggplot to image tag — render_plot","text":"Render imatge ggplot image tag","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/render_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render imatge or ggplot to image tag — render_plot","text":"","code":"render_plot(p)"},{"path":"https://jrosell.github.io/ambhtmx/reference/render_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render imatge or ggplot to image tag — render_plot","text":"p ggplot another object can printed captured png image","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/render_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render imatge or ggplot to image tag — render_plot","text":"img htmltools tag data encoded src attribute","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/render_png.html","id":null,"dir":"Reference","previous_headings":"","what":"Render a png image to a img tag — render_png","title":"Render a png image to a img tag — render_png","text":"Render png image img tag","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/render_png.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render a png image to a img tag — render_png","text":"","code":"render_png(p)"},{"path":"https://jrosell.github.io/ambhtmx/reference/render_png.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render a png image to a img tag — render_png","text":"p ggplot another object can printed captured png image","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/render_png.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render a png image to a img tag — render_png","text":"img htmltools tag data encoded src attribute","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/render_tags.html","id":null,"dir":"Reference","previous_headings":"","what":"Render tags to character vector — render_tags","title":"Render tags to character vector — render_tags","text":"Render tags character vector","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/render_tags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render tags to character vector — render_tags","text":"","code":"render_tags(...)"},{"path":"https://jrosell.github.io/ambhtmx/reference/render_tags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render tags to character vector — render_tags","text":"... one htmltools objects.","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/render_tags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render tags to character vector — render_tags","text":"character representation input","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/script_from_js_tpl.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate script from js template — script_from_js_tpl","title":"Generate script from js template — script_from_js_tpl","text":"Generate script js template","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/script_from_js_tpl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate script from js template — script_from_js_tpl","text":"","code":"script_from_js_tpl(file, ...)"},{"path":"https://jrosell.github.io/ambhtmx/reference/script_from_js_tpl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate script from js template — script_from_js_tpl","text":"file path js file ... mutiple named arguments value replace","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/script_from_js_tpl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate script from js template — script_from_js_tpl","text":"","code":"if (FALSE){   # replaces {init} to 0   script_from_js_tpl(\"script.js\", init = \"init\") }"},{"path":"https://jrosell.github.io/ambhtmx/reference/send_page.html","id":null,"dir":"Reference","previous_headings":"","what":"Render a page and send the respose — send_page","title":"Render a page and send the respose — send_page","text":"Render page send respose","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/send_page.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render a page and send the respose — send_page","text":"","code":"send_page(main = NULL, res, ...)"},{"path":"https://jrosell.github.io/ambhtmx/reference/send_page.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render a page and send the respose — send_page","text":"main htmltools object body html page res response object ... paramters render page function","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/send_tags.html","id":null,"dir":"Reference","previous_headings":"","what":"Render a custom page with a custom title and main content — send_tags","title":"Render a custom page with a custom title and main content — send_tags","text":"Render custom page custom title main content","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/send_tags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render a custom page with a custom title and main content — send_tags","text":"","code":"send_tags(main = NULL, res, ...)"},{"path":"https://jrosell.github.io/ambhtmx/reference/send_tags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render a custom page with a custom title and main content — send_tags","text":"main htmltools object render res response object ... htmltools object render","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/style_from_css_tpl.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate style from css template — style_from_css_tpl","title":"Generate style from css template — style_from_css_tpl","text":"Generate style css template","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/style_from_css_tpl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate style from css template — style_from_css_tpl","text":"","code":"style_from_css_tpl(file, ...)"},{"path":"https://jrosell.github.io/ambhtmx/reference/style_from_css_tpl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate style from css template — style_from_css_tpl","text":"file path js file ... mutiple named arguments value replaces","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/style_from_css_tpl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate style from css template — style_from_css_tpl","text":"","code":"if (FALSE){   # replaces \"var(--tpl-background)\" to \"red\"   style_from_css_tpl(\"styles.css\", background = \"red\") }"},{"path":"https://jrosell.github.io/ambhtmx/reference/tags.html","id":null,"dir":"Reference","previous_headings":"","what":"Create HTML tags without requiring htmltools::tags$ — tags","title":"Create HTML tags without requiring htmltools::tags$ — tags","text":"Create R object represents HTML tag. convenience, common HTML tags (e.g., <div>) can created calling tag name directly (e.g., div()). create less common HTML5 (SVG) tags (e.g., <article>), use tags list collection (e.g., tags$article()). create non HTML/SVG tags, use lower-level tag() constructor.","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/tags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create HTML tags without requiring htmltools::tags$ — tags","text":"","code":"button(..., .noWS = NULL, .renderHook = NULL)  textarea(..., .noWS = NULL, .renderHook = NULL)  input(..., .noWS = NULL, .renderHook = NULL)  label(..., .noWS = NULL, .renderHook = NULL)  nav(..., .noWS = NULL, .renderHook = NULL)  li(..., .noWS = NULL, .renderHook = NULL)  ul(..., .noWS = NULL, .renderHook = NULL)  ol(..., .noWS = NULL, .renderHook = NULL)  form(..., .noWS = NULL, .renderHook = NULL)  style(..., .noWS = NULL, .renderHook = NULL)  script(..., .noWS = NULL, .renderHook = NULL)"},{"path":"https://jrosell.github.io/ambhtmx/reference/tags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create HTML tags without requiring htmltools::tags$ — tags","text":"... Tag attributes (named arguments) children (unnamed arguments). named argument NA value rendered boolean attributes (see example). Children may include combination : tags objects HTML() strings htmlDependency()s Single-element atomic vectors list()s containing combination .noWS Character vector used omit whitespace normally written around tag. Valid options include , , outside, -begin, -end. number options can specified. .renderHook function (list functions) call tag rendered. function least one argument (tag) return anything can converted tags via .tags(). Additional hooks may also added particular tag via tagAddRenderHook().","code":""},{"path":"https://jrosell.github.io/ambhtmx/reference/tags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create HTML tags without requiring htmltools::tags$ — tags","text":"list() shiny.tag class can converted HTML string via .character() saved file save_html().","code":""}]
